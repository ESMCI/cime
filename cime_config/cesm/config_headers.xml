<?xml version="1.0"?>

<?xml-stylesheet type="text/xsl" href="config_definition.xsl" ?>

<files>

  <file name="env_case.xml">
    <header>
    These variables CANNOT BE CHANGED once a case has been created.
    Invoke create_newcase again if a different grid or component
    combination is required.
    </header>
  </file>

  <file name ="env_run.xml">
    <header>
    These variables MAY BE CHANGED ANYTIME during a run.
    Additional machine speific variables that can be changed
    during a run are contained in the env_mach_specific file
    Note1: users SHOULD NOT modify BUILD_COMPETE in env_build.xml
    this is done automatically by the scripts.
    </header>
  </file>

  <file name="env_build.xml">
    <header>
    These variables SHOULD NOT be changed once the model has been built.
    urrently, these variables are not cached.
    Note1: users SHOULD NOT modify BUILD_COMPETE below
    this is done automatically by the scripts.
    </header>
  </file>

  <file name="env_mach_pes.xml">
    <header>
    These variables CANNOT be modified once case_setup has been           
    invoked without first invoking case_setup -clean.                     
      
    component task/thread settings                                             
    if the user wants to change the values below after ./case_setup, run       
    ./case_setup -clean                                                     
    ./case_setup                                                            
    to reset the pes for the run                                              
    
    NTASKS are the total number of MPI tasks                                  
    NTHRDS are the number of OpenMP threads per MPI task                        
    ROOTPE is the global mpi task associated with the root task               
    of that component                                                       
    PSTRID is the stride of MPI tasks across the global                       
    set of pes (for now this is set to 1)                              
    NINST is the number of instances of the component (will be spread         
    evenly across NTASKS)                                               
    
    for example, for a setting with                                             
    NTASKS = 8                                                              
    NTHRDS = 2                                                              
    ROOTPE = 32                                                             
    NINST  = 2                                                              
    the MPI tasks would be placed starting on global pe 32                    
    and each pe would be threaded 2-ways for this component.                    
    These tasks will be divided amongst both instances (4 tasks each).        
    
    Note: PEs that support threading never have an MPI task associated        
    with them for performance reasons.  As a result, NTASKS and ROOTPE      
    are relatively independent of NTHRDS and they determine                 
    the layout of mpi processors between components.  NTHRDS is used        
    to determine how those mpi tasks should be placed across the machine.   
    
    The following values should not be set by the user since they'll be        
    overwritten by scripts.
    TOTALPES
    CCSM_PCOST
    CCSM_ESTCOST
    PES_LEVEL
    MAX_TASKS_PER_NODE
    PES_PER_NODE
    CCSM_TCOST
    CCSM_ESTCOST
    
    The user can copy env_mach_pes.xml from another run, but they'll need to
    do the following
    ./case_setup -clean
    ./case_setup
    ./CASE.build
    </header>
  </file>

  <file name="env_archive.xml">
    <header>
    These are the variables specific to the short and long term          
    archivers, and the variable time series file generation.             
    We recommend that users *NEVER* run diagnostics                      
    or post-processing packages in the same location as the short-term   
    (DOUT_S_ROOT.locked) archiver when the model job is running.         
    Instead, You may run these packages in the (DOUT_S_ROOT)             
    location which contains hard-links back to the files in the          
    (DOUT_S_ROOT.locked) directory.
    For a detailed listing of the env_archive.xml file, run
    ./st_archive -help                                                   
    To validate the env_archive.xml file using xmllint, run
    xmllint -schema ./Tools/config_archive.xsd env_archive.xml
    </header>
  </file>

  <file name="env_test.xml">
    <header>These are the variables specific to a test case.</header>
  </file>

</files>
