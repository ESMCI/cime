#!/usr/bin/env python2
{{ batchdirectives }}
"""
 This is the system test submit script for CIME

"""

from standard_script_setup import *

from CIME.utils import expect, run_cmd
from CIME.system_test import SystemTest
from CIME.case import Case
import argparse, doctest, shutil, glob

###############################################################################
def parse_command_line(args, description):
###############################################################################
    parser = argparse.ArgumentParser(
        usage="""\n%s [<testname>] [--verbose]
OR
%s --help
OR
%s --test

\033[1mEXAMPLES:\033[0m
    \033[1;32m# case.test SMS\033[0m
    > %s
""" % ((os.path.basename(args[0]), ) * 4),

description=description,

formatter_class=argparse.ArgumentDefaultsHelpFormatter
)

    CIME.utils.setup_standard_logging_options(parser)

    parser.add_argument("testname", nargs="?",default=None,
                        help="Name of the test to run, default is set in TESTCASE in env_test.xml")

    parser.add_argument("--caseroot", default=os.getcwd(),
                        help="Case directory to build")

    args = parser.parse_args(args[1:])

    CIME.utils.handle_standard_logging_options(args)

    return args.caseroot, args.testname

def cimetest(caseroot, testname=None):
    case = None
    if(testname is None):
        case = Case(caseroot)
        testname = case.get_value('TESTCASE')

    logging.warn("Running test for %s"%testname)

    test = SystemTest(testname, caseroot, case)

    test.run()



def _main_func(description):
    if ("--test" in sys.argv):
        test_results = doctest.testmod(verbose=True)
        sys.exit(1 if test_results.failed > 0 else 0)

    caseroot, testname = parse_command_line(sys.argv, description)

    cimetest(caseroot, testname)

if (__name__ == "__main__"):
    _main_func(__doc__)
