#!/usr/bin/env python2

"""
template to create a case short term archiving script
"""

import sys, os, time
_CIMEROOT = os.environ.get("CIMEROOT")
if _CIMEROOT is None:
    raise SystemExit("ERROR: must set CIMEROOT environment variable")

_LIBDIR = os.path.join(_CIMEROOT, "scripts", "Tools")
sys.path.append(_LIBDIR)

from standard_script_setup          import *
from CIME.case_submit               import submit
from CIME.XML.standard_module_setup import *
from CIME.case                      import Case
from CIME.utils                     import get_model, run_cmd, appendStatus

logger = logging.getLogger(__name__)

# Batch system directives
{{ batchdirectives }}

###############################################################################
def parse_command_line(args):
###############################################################################

    get_model()

    parser = argparse.ArgumentParser()

    CIME.utils.setup_standard_logging_options(parser)

    parser.add_argument("--caseroot", default=os.getcwd(),
                        help="Case directory to build")

    args = parser.parse_args()

    CIME.utils.handle_standard_logging_options(args)

    if args.caseroot is not None:
        os.chdir(args.caseroot)

###############################################################################
def _main_func():
###############################################################################

    parse_command_line(sys.argv)

    case = Case()

    caseroot = case.get_value("CASEROOT")

    # do short-term archiving
    appendStatus("st_archiving starting",
                 caseroot=caseroot, sfile="CaseStatus")

    cmd = os.path.join(caseroot, "Tools/st_archive") + " >> stArchiveStatus 2>&1"
    run_cmd(cmd)

    appendStatus("st_archiving completed",
                 caseroot=caseroot, sfile="CaseStatus")

    # resubmit case if appropriate
    resubmit = int(case.get_value("RESUBMIT"))
    if resubmit > 0:
        appendStatus("resubmitting from st_archive",
                     caseroot=caseroot, sfile="CaseStatus")
        submit(caseroot, resubmit="case.st_archive")


###############################################################################

if __name__ == "__main__":
    _main_func()
