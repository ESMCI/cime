#!/usr/bin/env perl
 
#--------------------------------------------------------------------------------------------
# build-namelist script for the CIME Data Runoff Model.
#--------------------------------------------------------------------------------------------

use strict;
use English;
use IO::File;

my ($caseroot, $cimeroot, $confdir, $inst_string, $namelist_infile, $user_xml_dir) = @ARGV;

my @dirs = ( "$cimeroot/utils/perl5lib" );
unshift @INC, @dirs;
require Streams::BuildNamelistUtils;

#-------------------------------------------
# Create nmlgen object
#-------------------------------------------

my $nmlgen = BuildNamelistUtils->new('dwav',$cimeroot, $caseroot, $confdir, 
				     $user_xml_dir, $namelist_infile);

#-------------------------------------------
# Required xml variables           
#-------------------------------------------

my $DIN_LOC_ROOT = $nmlgen->get_xmlvar('DIN_LOC_ROOT');   
my $WAV_GRID	 = $nmlgen->get_xmlvar('WAV_GRID');	    
my $DWAV_MODE	 = $nmlgen->get_xmlvar('DWAV_MODE');	    

if (($WAV_GRID eq "null") && ($DWAV_MODE ne "NULL")) {
    die "ERROR:: WAV_GRID null DWAV_MODE not NULL.\n";
}

print "DWAV mode is $DWAV_MODE \n";
print "DWAV grid is $WAV_GRID \n";

#-------------------------------------------
# Determine hash for parsing default_namelist_dwav.xml
#-------------------------------------------
my %namelist_opts;
$namelist_opts{'dwav_mode'} = $DWAV_MODE;
$namelist_opts{'wav_grid'}  = $WAV_GRID;

#-------------------------------------------
# Determine streams
#-------------------------------------------

my @streams = $nmlgen->get_streams(\%namelist_opts );

#-------------------------------------------
# For each stream, create stream text file and update input data list
#-------------------------------------------

my $fh_out = new IO::File;
$fh_out->open(">$caseroot/Buildconf/dwav.input_data_list") or
    die "** can't open filepath file: dwav.input_data_list\n";

foreach my $stream ( @streams ) {
    if ($stream eq "NULL") {
	next;
    }
    print "DWAV stream is $stream$inst_string \n";

    # Determine stream txt file and update the streams_namelists hash for the new stream
    my $outstream = "dwav.streams.txt" . ".$stream" . "$inst_string";
    $nmlgen->create_stream_file(\%namelist_opts, $stream, $outstream, $fh_out);
}

$fh_out->close;

#-------------------------------------------
# namelist group: shr_strdata_nml  (in file dwav_wav_in) 
#-------------------------------------------

$nmlgen->create_shr_strdata_nml(\%namelist_opts );

#FIXME - note that"${WAV_DOMAIN_PATH}/${WAV_DOMAIN_FILE}") is not sent as an argument
# to create_shr_strdata_nml and in fact domainfile does not appear in the namelist - WHY?

#-------------------------------------------
# namelist group: dwav_nml  (in file dwav_in)            
#-------------------------------------------

$nmlgen->add_default('wav_in', "dwav_wav_in${inst_string}");
$nmlgen->add_default('decomp', '1d');
$nmlgen->add_default('force_prognostic_true', '.false.');
$nmlgen->add_default('restfilm', 'undefined');
$nmlgen->add_default('restfils', 'undefined');

#-------------------------------------------
# Write output files
#-------------------------------------------

$nmlgen->write_output_files('wav');
