#!/usr/bin/env python2

"""
Script to build a case.
"""

from standard_script_setup import *

import CIME.build as build

###############################################################################
def parse_command_line(args, description):
###############################################################################
    parser = argparse.ArgumentParser(
        usage="""\n%s [<casedir>] [--verbose]
OR
%s --help
OR
%s --test

\033[1mEXAMPLES:\033[0m
    \033[1;32m# Build case \033[0m
    > %s
""" % ((os.path.basename(args[0]), ) * 4),
        description=description,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )

    CIME.utils.setup_standard_logging_options(parser)

    parser.add_argument("caseroot", nargs="?", default=os.getcwd(),
                        help="Case directory to build")

    parser.add_argument("-t", "--testmode", action="store_true",
                        help="Some of the tests require multiple model builds, to accommodate "
                        "that we have a case.test_build script. If you are in a test that requires"
                        " multiple builds, provide this flag.")

    parser.add_argument("-s", "--sharedlib-only", action="store_true",
                        help="Only build sharedlibs")

    parser.add_argument("-m", "--model-only", action="store_true",
                        help="Assume shared libs already built")

    args = parser.parse_args(args[1:])

    CIME.utils.handle_standard_logging_options(args)

    return args.caseroot, args.testmode, args.sharedlib_only, args.model_only

###############################################################################
def _main_func(description):
###############################################################################
    if "--test" in sys.argv:
        test_results = doctest.testmod(verbose=True)
        sys.exit(1 if test_results.failed > 0 else 0)

    caseroot, testmode, sharedlib_only, model_only = parse_command_line(sys.argv, description)
    logging.info("calling build.case_build with caseroot=%s and testmode=%s"
                 %(caseroot, testmode))
    build.case_build(caseroot, testmode, sharedlib_only, model_only)

if __name__ == "__main__":
    _main_func(__doc__)
