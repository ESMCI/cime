#!/usr/bin/env python

"""
Show the batch status of all jobs associated with this case.
"""

from standard_script_setup import *

from CIME.case            import Case
from CIME.test_status     import *

###############################################################################
def parse_command_line(args, description):
###############################################################################
    parser = argparse.ArgumentParser(
        usage="""\n{0} [--verbose]
OR
{0} --help
OR
{0} --test

\033[1mEXAMPLES:\033[0m
    \033[1;32m# Show case jobs status \033[0m
    > {0}
""".format(os.path.basename(args[0])),
        description=description,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )

    CIME.utils.setup_standard_logging_options(parser)

    parser.add_argument("caseroot", nargs="?", default=os.getcwd(),
                        help="Case directory to query")

    args = CIME.utils.parse_args_and_handle_standard_logging_options(args, parser)

    return args.caseroot

###############################################################################
def _main_func(description):
###############################################################################
    if "--test" in sys.argv:
        test_results = doctest.testmod(verbose=True)
        sys.exit(1 if test_results.failed > 0 else 0)

    caseroot = parse_command_line(sys.argv, description)

    with Case(caseroot, read_only=False) as case:
        case.report_job_status()

    sys.exit(0)

if __name__ == "__main__":
    _main_func(__doc__)
