#
# This main CMakeLists.txt is written to be included from either
# the top level of CIME or the top level of E3SM. The required
# CIME_REL_DIR variable is set in CIME to be "." and in E3SM
# to be "cime".  Except for this misdirection, this is meant
# to be the full-functioning top-level CMakeLists.txt file
# [Andy, 10/4/16]
#
# Turning it over to Jim Foucar
# [A. Steyer, April 2019]
#

cmake_minimum_required(VERSION 2.7)
INCLUDE(ExternalProject)

PROJECT(CIME Fortran C)
message("XXX ${NETCDF_PATH}")
message("XXY ${FFLAGS}")
SET(CMAKE_C_FLAGS ${CFLAGS})
SET(CMAKE_Fortran_FLAGS ${FFLAGS})
# the fortran format is "FREE" to make sure that the atmosphere physics, chemistry, etc can compile
set(CMAKE_Fortran_FORMAT "FREE")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
ADD_DEFINITIONS(${CPPDEFS})

# May want to rename CIME_BUILD
OPTION(CIME_BUILD "Flag to distinguish Cmake logic for CIME code build, as opposed to Unit Tests" ON)

SET(CIME_REL_DIR "." CACHE PATH "The relative path to CIME from the top level CMakeLists file. Default set by CIME.")
IF(NOT EXISTS ${CIME_REL_DIR})
  SET(CIME_REL_DIR "." CACHE PATH "The relative path to CIME from the top level CMakeLists file. Default set by CIME or CIME.")
ENDIF()

GET_FILENAME_COMPONENT(CIME_ABS_PATH ${PROJECT_SOURCE_DIR}/${CIME_REL_DIR} ABSOLUTE)
SET(CIME_DIR ${CIME_ABS_PATH} CACHE INTERNAL "The fully qualified path to CIME.")
GET_FILENAME_COMPONENT(CIME_ABS_PATH ${PROJECT_BINARY_DIR}/${CIME_REL_DIR} ABSOLUTE)
SET(CIME_BINARY_DIR ${CIME_ABS_PATH} CACHE INTERNAL "The fully qualified path to binary directory for CIME.")
# note that what letters in netcdf and pnetcdf are capital or lower case can cause errors
SET(CIME_NetCDF_DIR "${NetCDF_PATH}" CACHE PATH "Install location of NetCDF. Default set by CIME.")
SET(CIME_PNetCDF_DIR "${PNetCDF_PATH}" CACHE PATH "Install location of PNETCDF. Default set by CIME.")
SET(GENF90_PATH "${CIME_DIR}/src/externals/genf90" CACHE STRING "Location of GEN90 executable. Default set by CIME")

SET(E3SM_BUILD ON)

MESSAGE("----------------------------------------------")
MESSAGE("Building with CMake with CIME in: ${CIME_DIR}")
MESSAGE("----------------------------------------------\n")

# Path to CIME/cime dir (either standalone or within CIME)
# WHICH_PIO was originally called PIO_VERSION, but this caused a bunch of annoying
# warnings due to CMake's treatment of version variables
SET(WHICH_PIO 1)
SET(PIO_REL_DIR src/externals/pio${WHICH_PIO})
SET(USER_CMAKE_MODULE_PATH ${CIME_DIR}/${PIO_REL_DIR}/../pio2/cmake;${CIME_DIR}/src/CMake)
SET(CMAKE_C_FLAGS ${CFLAGS})
SET(CMAKE_Fortran_FLAGS ${FFLAGS})
SET(CMAKE_Fortran_MODULE_DIRECTORY ${PROJECT_BINARY_DIR}/lib/include)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
SET(PIO_ENABLE_TESTS OFF)

# note that what letters in netcdf and pnetcdf are capital or lower case can cause errors
SET(PNetCDF_PATH ${PNetCDF_PATH})
SET(NetCDF_PATH ${NetCDF_PATH})

# note that what letters in netcdf and pnetcdf are capital or lower case can cause errors
INCLUDE_DIRECTORIES(${NETCDF_PATH}/include)
INCLUDE_DIRECTORIES(${PNetCDF_PATH}/include)

message("cime source dir:  ${CIME_DIR}")
message("cime binary dir:  ${CIME_BINARY_DIR}")
message("cime binary dir:  ${CIME_BINARY_DIR}")
message("cime abs dir: ${CIME_ABS_PATH}")
message("project binary dir ${PROJECT_BINARY_DIR}")
message("cime rel dir: ${CIME_REL_DIR}")

SET(MPEU_REL_DIR     src/externals/mct/mpeu)
SET(MCT_REL_DIR      src/externals/mct/mct)
SET(GPTL_REL_DIR     src/share/timing)
SET(ESMF_REL_DIR     src/share/esmf_wrf_timemgr)
SET(STREAMS_REL_DIR  src/share/streams)
SET(SEQ_REL_DIR      src/drivers/mct/shr)
SET(SHR_REL_DIR      src/share)
SET(SHR_DIR          ${CIME_DIR}/${SHR_REL_DIR})
SET(SHR_UTIL_REL_DIR ${SHR_REL_DIR}/util)
SET(DRIVER_REL_DIR   src/drivers/mct/main)
SET(DRIVER_DIR       ${CIME_DIR}/${DRIVER_REL_DIR})

SET(MPEU_BINARY_DIR ${CIME_BINARY_DIR}/${MPEU_REL_DIR})
SET(MCT_BINARY_DIR ${CIME_BINARY_DIR}/${MCT_REL_DIR})
SET(GPTL_BINARY_DIR ${CIME_BINARY_DIR}/${GPTL_REL_DIR})
SET(PIO_BINARY_DIR ${CIME_BINARY_DIR}/${PIO_REL_DIR})
SET(SEQ_BINARY_DIR ${CIME_BINARY_DIR}/${SEQ_REL_DIR})
SET(SHR_BINARY_DIR ${CIME_BINARY_DIR}/${SHR_UTIL_REL_DIR})
SET(SHR_SYS_BINARY_DIR ${CIME_BINARY_DIR}/${SHR_UTIL_REL_DIR})
SET(SHR_CAL_BINARY_DIR ${CIME_BINARY_DIR}/${SHR_UTIL_REL_DIR})
SET(ESMF_BINARY_DIR ${CIME_BINARY_DIR}/${ESMF_REL_DIR})
SET(STREAMS_BINARY_DIR ${CIME_BINARY_DIR}/${STREAMS_REL_DIR})
SET(DRIVER_BINARY_DIR ${CIME_BINARY_DIR}/${DRIVER_REL_DIR})


# Need include from source dir, not build dir like usual
INCLUDE_DIRECTORIES(${SHR_DIR}/include)
IF( ${WHICH_PIO} EQUAL 1)
  INCLUDE_DIRECTORIES(${PIO_BINARY_DIR}/pio)
ELSE()
  INCLUDE_DIRECTORIES(${PIO_BINARY_DIR}/src/clib ${PIO_BINARY_DIR}/src/flib )
ENDIF()

MESSAGE("\nConfiguring libraries, utils, share, driver:")

# IF( MPILIB STREQUAL "mpi-serial")
# ADD_SUBDIRECTORY(${CIME_DIR}/${MPISERIAL_REL_DIR})
# ENDIF()

ADD_SUBDIRECTORY(${CIME_DIR}/${MPEU_REL_DIR})
ADD_SUBDIRECTORY(${CIME_DIR}/${MCT_REL_DIR})
ADD_SUBDIRECTORY(${CIME_DIR}/${GPTL_REL_DIR})
ADD_SUBDIRECTORY(${CIME_DIR}/${PIO_REL_DIR})
ADD_SUBDIRECTORY(${CIME_DIR}/${SHR_UTIL_REL_DIR})
ADD_SUBDIRECTORY(${CIME_DIR}/${ESMF_REL_DIR})
ADD_SUBDIRECTORY(${CIME_DIR}/${STREAMS_REL_DIR})
ADD_SUBDIRECTORY(${CIME_DIR}/${SEQ_REL_DIR})
ADD_SUBDIRECTORY(${DRIVER_DIR})

MESSAGE("\nConfiguring Components:")
ADD_SUBDIRECTORY(${ATM_DIR} ${PROJECT_BINARY_DIR}/src/components/${CIME_ATM}) # ${ATM_BINARY_DIR})
ADD_SUBDIRECTORY(${OCN_DIR} ${PROJECT_BINARY_DIR}/src/components/${CIME_OCN})
ADD_SUBDIRECTORY(${WAV_DIR} ${PROJECT_BINARY_DIR}/src/components/${CIME_WAV})
ADD_SUBDIRECTORY(${GLC_DIR} ${PROJECT_BINARY_DIR}/src/components/${CIME_GLC})
ADD_SUBDIRECTORY(${ICE_DIR} ${PROJECT_BINARY_DIR}/src/components/${CIME_ICE})
ADD_SUBDIRECTORY(${ROF_DIR} ${PROJECT_BINARY_DIR}/src/components/${CIME_ROF})
ADD_SUBDIRECTORY(${LND_DIR} ${PROJECT_BINARY_DIR}/src/components/${CIME_LND})
ADD_SUBDIRECTORY(${ESP_DIR} ${PROJECT_BINARY_DIR}/src/components/${CIME_ESP})

SET(LND_BINARY_DIR ${CMAKE_BINARY_DIR}/src/components/${CIME_LND})
SET(ATM_BINARY_DIR ${CMAKE_BINARY_DIR}/src/components/${CIME_ATM})
SET(ICE_BINARY_DIR ${CMAKE_BINARY_DIR}/src/components/${CIME_ICE})
SET(OCN_BINARY_DIR ${CMAKE_BINARY_DIR}/src/components/${CIME_OCN})
SET(WAV_BINARY_DIR ${CMAKE_BINARY_DIR}/src/components/${CIME_WAV})
SET(ESP_BINARY_DIR ${CMAKE_BINARY_DIR}/src/components/${CIME_ESP})
SET(ROF_BINARY_DIR ${CMAKE_BINARY_DIR}/src/components/${CIME_ROF})
SET(GLC_BINARY_DIR ${CMAKE_BINARY_DIR}/src/components/${CIME_GLC})


MESSAGE("\nAdding executables:")
MESSAGE("   + ${MODEL}.exe")
SET(CMAKE_EXE_LINKER_FLAGS "${LDFLAGS} ${SLIBS}")
ADD_EXECUTABLE(${MODEL}.exe ${DRIVER_DIR}/cime_driver.F90)
INSTALL(TARGETS ${MODEL}.exe RUNTIME DESTINATION ${PROJECT_BINARY_DIR})

INCLUDE_DIRECTORIES (${SHR_BINARY_DIR}
                     ${GPTL_BINARY_DIR}
                     ${ESMF_BINARY_DIR}
                     ${STREAMS_BINARY_DIR}
                     ${SEQ_BINARY_DIR}
                     ${DRIVER_BINARY_DIR}
                     ${LND_BINARY_DIR}
                     ${OCN_BINARY_DIR}
                     ${ICE_BINARY_DIR}
                     ${GLC_BINARY_DIR}
                     ${ATM_BINARY_DIR}
                     ${ROF_BINARY_DIR}
                     ${WAV_BINARY_DIR}
                     ${ESP_BINARY_DIR}
                     ${MCT_BINARY_DIR}
                     ${MPEU_BINARY_DIR}
		     ${PIO_BINARY_DIR}
                     )

MESSAGE("   + CompMod:")
ADD_LIBRARY(compmod ${DRIVER_DIR}/cime_comp_mod.F90)
ADD_DEPENDENCIES(compmod driver)


MESSAGE(" + The whole coupled model")
TARGET_LINK_LIBRARIES(${MODEL}.exe  compmod driver
                       ${CIME_OCN}  ${CIME_GLC} ${CIME_ROF} ${CIME_WAV} 
                       ${CIME_ESP} ${CIME_LND} ${CIME_ICE} ${CIME_ATM}
                       shr streams seq shrcal esmf
                       shrsys gptl mct mpeu pio)

MESSAGE("\nAnd CMake says...:")
