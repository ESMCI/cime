README.pyCECT
=============
CESM Ensemble Consistency Test
------------------------------
The CESM-ECT package is used to compare the results of a set of new (modified)
CESM simulations against the accepted ensemble.  Current functionality includes 
CAM-ECT, which examines history files from CAM (atmosphere) or POP-ECT which 
examines files from POP (ocean).  CAM-ECT requires 
a summary file generated by pyEnsSum.py (see README.pyEnsSum), and POP-ECT 
requires  a summary file generated by pyEnsSumPop.py (see README.pyEnsSumPop).
An overall pass or fail is designated.

For details on CAM-ECT, see: 

A.H. Baker, D.M. Hammerling, M.N. Levy, H. Xu, J.M. Dennis, B.E. Eaton, J. Edwards, 
C. Hannay, S.A. Mickelson, R.B. Neale, D. Nychka, J. Shollenberger, J. Tribbia, 
M. Vertenstein, and D. Williamson,"A new ensemble-based consistency test for the 
community earth system model."Geoscientific Model Development, 8, pp. 2829-2840, 
doi:10.5194/gmd-8-2829-2015, 2015.

For details on POP-ECT, see:  

A.H.Baker, Y.Hu, D.M. Hammerling, H. Xu, Y.Tseng, 
X. Huang, and F.O. Byan "Evaluating Consistency in the Ocean Model Component of 
the Community Earth System Model", submitted to Geoscientific Model Development 
Discussions, Dec. 2015


:AUTHORS: Haiying Xu, Allison Baker
:VERSION: 2.0.0
:COPYRIGHT: See the document entitled LICENSE.txt

Send questions and comments to Haiying Xu (haiyingx@ucar.edu).


Overview
--------
This package includes:

       pyCECT.py
                            A script which compares the new CAM or POP results to the 
                            accepted ensemble and issues an overall "pass" or "fail"
			    (runs CAM-ECT by default or POP-ECT if specified)

       pyEnsLib.py         Library python script used by pyCECT.py


Before you start to use the package, you need to load the following modules:

       - module load python
       - module load numpy
       - module load scipy
       - module load pynio

To see all options (and defaults):

       python pyCECT.py -h

Notes:

     	If the indir contains more files than the number (num) specified by "--numRunFile <num>"
	(default= 3), then num files will be chosen at random from that directory.


Examples for generating consistency results:
--------------------------------------------
       (A)  Using the default pass/fail criteria (ie. sigMul, minPCFail, minRunFail,
       numRunFile, and nPC) and the summary file generated by pyEnsSum.py:

	    -sumfile  ens.summary.nc

	    and specifying the directory path that contains the runs to be evaluated:

	    -indir  /glade/u/tdd/asap/verification/cesm1_3_beta11/mira

	    yields the following command:

	    python pyCECT.py --sumfile  ens.summary.nc --indir  /glade/u/tdd/asap/verification/cesm1_3_beta11/mira

